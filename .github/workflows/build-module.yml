name: Build AmneziaWG for Xiaomi AX3200

on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: 'OpenWRT version (e.g. 23.05.5)'
        required: true
        default: '23.05.5'

jobs:
  build:
    name: "Build for Xiaomi AX3200"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ inputs.openwrt_version }}
          fetch-depth: 0

      - name: Cache Tools and Kernel
        uses: actions/cache@v4
        with:
          path: "**"
          key: ${{ runner.os }}-build-xiaomi-ax3200-${{ inputs.openwrt_version }}

      - name: Setup build environment
        run: |
          echo "Building for Xiaomi AX3200"
          echo "OpenWrt version: ${{ inputs.openwrt_version }}"
          
          # Configuration
          TARGET="mediatek/mt7622"
          SUBTARGET="xiaomi_redmi-router-ax6s"
          PKGARCH="aarch64_cortex-a53"
          
          echo "Target: $TARGET"
          echo "Subtarget: $SUBTARGET"
          echo "Arch: $PKGARCH"
          
          # Setup feeds
          wget https://downloads.openwrt.org/releases/${{ inputs.openwrt_version }}/targets/$TARGET/$SUBTARGET/feeds.buildinfo -O feeds.conf || cp feeds.conf.default feeds.conf
          
          echo "src-git awgopenwrt https://github.com/Slava-Shchipunov/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          # Setup config
          wget https://downloads.openwrt.org/releases/${{ inputs.openwrt_version }}/targets/$TARGET/$SUBTARGET/config.buildinfo -O .config || true
          
          # Add AmneziaWG packages to config
          echo "CONFIG_TARGET_mediatek=y" >> .config
          echo "CONFIG_TARGET_mediatek_mt7622=y" >> .config
          echo "CONFIG_TARGET_mediatek_mt7622_DEVICE_xiaomi_redmi-router-ax6s=y" >> .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          
          make defconfig

      - name: Build tools and toolchain
        run: |
          make tools/install -j $(nproc)
          make toolchain/install -j $(nproc)

      - name: Build kernel
        run: |
          make target/linux/compile -j $(nproc) V=s
          
          # Display kernel version
          VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic || echo "Not found")
          echo "Kernel vermagic: $VERMAGIC"

      - name: Build AmneziaWG packages
        run: |
          # Make sure AmneziaWG packages are installed from feeds
          ./scripts/feeds install kmod-amneziawg amneziawg-tools luci-app-amneziawg
          
          # Build packages
          make package/kmod-amneziawg/{clean,compile} V=s || echo "Warning: kmod-amneziawg build failed"
          make package/amneziawg-tools/{clean,compile} V=s || echo "Warning: amneziawg-tools build failed" 
          make package/luci-app-amneziawg/{clean,compile} V=s || echo "Warning: luci-app-amneziawg build failed"
          
          # Create artifacts directory
          mkdir -p artifacts
          
          # Find and copy packages
          find bin/ -name "*amneziawg*.ipk" -exec cp {} artifacts/ \;
          
          # List artifacts
          ls -la artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-packages
          path: artifacts/*.ipk
