name: Build AmneziaWG for Xiaomi AX3200

on:
  workflow_dispatch:
    inputs:
      openwrt_version:
        description: 'OpenWRT version (e.g. v23.05.5)'
        required: true
        default: 'v23.05.5'

jobs:
  build:
    name: "Build for Xiaomi AX3200"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config:
          - tag: "23.05.5"
            target: "mediatek/mt7622"
            subtarget: "xiaomi_redmi-router-ax6s"
            pkgarch: "aarch64_cortex-a53"
            vermagic: "5.15.167-1-03ba5b5fee47f2232a088e3cd9832aec"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.config.tag }}
          fetch-depth: 0

      - name: Cache Tools and Kernel
        uses: actions/cache@v4
        with:
          path: "**"
          key: ${{ runner.os }}-build-${{ matrix.config.target }}-${{ matrix.config.subtarget }}-${{ matrix.config.pkgarch }}

      - name: Building kernel and tools
        run: |
          echo "Building for:"
          echo "Target: ${{ matrix.config.target}}"
          echo "Subtarget: ${{ matrix.config.subtarget}}"
          echo "Arch: ${{ matrix.config.pkgarch}}"
          echo "Vermagic: ${{ matrix.config.vermagic}}"

          # Setup feeds
          wget https://downloads.openwrt.org/releases/${{ matrix.config.tag }}/targets/${{ matrix.config.target}}/${{ matrix.config.subtarget}}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/Slava-Shchipunov/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update && ./scripts/feeds install -a

          # Setup config
          wget https://downloads.openwrt.org/releases/${{ matrix.config.tag }}/targets/${{ matrix.config.target}}/${{ matrix.config.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config

          make defconfig

          # Build tools
          make tools/install -j $(nproc)
          make toolchain/install -j $(nproc)

          # Build kernel module
          make target/linux/compile -j $(nproc) V=s

          # Verify vermagic
          VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic)
          if [ "$VERMAGIC" != "${{ matrix.config.vermagic }}" ]; then
            echo "Vermagic mismatch: $VERMAGIC (expected ${{ matrix.config.vermagic}})"
            exit 1
          fi

      - name: Build AmneziaWG packages
        run: |
          # Build packages
          make package/kmod-amneziawg/{clean,compile} V=s
          make package/amneziawg-tools/{clean,compile} V=s
          make package/luci-app-amneziawg/{clean,compile} V=s

          # Prepare artifacts
          mkdir -p artifacts
          cp bin/packages/${{ matrix.config.pkgarch }}/awgopenwrt/*.ipk artifacts/
          cp bin/targets/${{ matrix.config.target}}/${{ matrix.config.subtarget}}/packages/kmod-amneziawg_*.ipk artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: amneziawg-packages
          path: artifacts/*.ipk
